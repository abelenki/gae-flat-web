"""[flat.py]
this will create the structure for a new Google AppEngine suitable
to act as a Flat Web with the GAE Application Name provided as parameter

#python flat.py $GAE_APPLICATION_NAME
___
"""

import os
import sys

def txt_index_yml():
  return """indexes:

# AUTOGENERATED

# This index.yaml is automatically updated whenever the dev_appserver
# detects that a new type of query is run.  If you want to manage the
# index.yaml file manually, remove the above marker line (the line
# saying "# AUTOGENERATED").  If you want to manage some indexes
# manually, move them above the marker line.  The index.yaml file is
# automatically uploaded to the admin console when you next deploy
# your application using appcfg.py."""

def create_file(file_path, file_data):
  fyl = open(file_path, 'w')
  fyl.writelines(file_data)
  fyl.close() 

def txt_app_yml(gae_app_name):
  return """application: """ + gae_app_name + """
version: 1
runtime: python
api_version: 1

handlers:
- url: /flat_web
  static_dir: flat_web/

- url: /
  script: main.py
"""

def txt_main_py():
  return """\"\"\"[ main.py ]
it's just here to redirect '/' to '/index.htm'
the redirect-link could be changed by changing the link below
\"\"\"

from google.appengine.ext import webapp
from google.appengine.ext.webapp import util

class MainHandler(webapp.RequestHandler):
  def get(self):
    self.redirect('/flat_web/index.htm')
  def post(self):
    self.redirect('/flat_web/index.htm')

def main():
  application = webapp.WSGIApplication(
    [
          ('/', MainHandler),
        ], debug=True)
  util.run_wsgi_app(application)


if __name__ == '__main__':
  main()
"""
def txt_flat_root(gae_app_name):
  return """<html>
  <head>
  	<title>""" + gae_app_name + """</title>
  </head>
  <body>
  	<h1>""" + gae_app_name + """</h1>
	<h3>Your own Static Content Website served by Google AppEngine</h3>
	<h5 stylw="float:bottom; margin-bottom:5px;">
		created by using 
		<a href="https://github.com/abhishekkr/gae-flat-web">
			https://github.com/abhishekkr/gae-flat-web
		</a>
	</h5>
  </body>
</html>"""

def create_flat_web(gae_app_name):
  gae_app_path = os.path.join(os.getcwd(),gae_app_name)
  flat_dir_path = os.path.join(gae_app_path,"flat_web")
  if not os.path.exists(gae_app_path):
    os.makedirs(gae_app_path)
    os.makedirs(flat_dir_path)
    #print gae_app_path   
    
    path_index_yml = os.path.join(gae_app_path,"index.yaml")
    create_file(path_index_yml, txt_index_yml())
    
    path_app_yml = os.path.join(gae_app_path,"app.yaml")
    create_file(path_app_yml, txt_app_yml(gae_app_name))
    
    path_main_py = os.path.join(gae_app_path,"main.py")
    create_file(path_main_py, txt_main_py())
    
    path_flat_root = os.path.join(flat_dir_path,"index.htm")
    create_file(path_flat_root, txt_flat_root(gae_app_name))
  else:
    print "Error: " + str(gae_app_path) + " already exists."
    
if __name__ == '__main__':
  if sys.argv.__len__()==2:
    gae_app_name = sys.argv[1]
    create_flat_web(gae_app_name)
  else:
    print "Wrong Command Execution"
    print "Syntax: #python flat.py GAE_APP_NAME"
